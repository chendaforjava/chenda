<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd	
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	
	<context:property-placeholder location="classpath:redis/redis.properties" ignore-unresolvable="true"/>
	
	 <!-- 配置JedisPoolConfig相关参数 -->  
    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">  
        <property name="maxActive" value="${spring.redis.pool.maxActive}"></property>  
        <property name="maxIdle" value="${spring.redis.pool.maxIdle}"></property>  
        <property name="minIdle" value="${spring.redis.pool.minIdle}"></property>  
        <property name="maxWait" value="${spring.redis.pool.maxWait}"></property>  
        <property name="testOnBorrow" value="${spring.redis.testOnBorrow}"></property>  
        <property name="testOnReturn" value="${spring.redis.testOnReturn}"></property>  
    </bean>  
	  <!-- 配置redis连接池 -->  
    <bean class="redis.clients.jedis.JedisPool">
        <constructor-arg ref="poolConfig" />  
        <constructor-arg value="${redis.host}" />
        <constructor-arg type="int" value="${spring.redis.port}" />  
        <constructor-arg type="int" value="${spring.redis.timeout}" />  
        <constructor-arg type="java.lang.String" value="" />  
        <constructor-arg type="int" value="0" />  
    </bean>  
	
	<!-- 配置redis服务器信息 -->  
    <bean id="connectionFactory"  
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">  
        <property name="poolConfig" ref="poolConfig"></property>  
        <property name="hostName" value="${redis.host}"></property>  
        <property name="port" value="${spring.redis.port}"></property>  
        <property name="password" value=""></property>  
        <property name="database" value="${redis.database}"></property>  
        <property name="timeout" value="${spring.redis.timeout}"></property>  
    </bean>  
	
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
      		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />  
    	</property>
    	<property name="valueSerializer">
    		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    	</property>
    	<property name="hashKeySerializer">
    		<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
    	</property>
    	<property name="hashValueSerializer">
    		<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
    	</property>
	</bean>
	
	
</beans>
