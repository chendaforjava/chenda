<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:c="http://www.springframework.org/schema/c"
	xmlns:amq="http://activemq.apache.org/schema/core" xmlns:websocket="http://www.springframework.org/schema/websocket"
	xmlns:jms="http://www.springframework.org/schema/jms" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
	http://www.springframework.org/schema/websocket  http://www.springframework.org/schema/websocket/spring-websocket.xsd  
	http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd  
	http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd  
	http://www.springframework.org/schema/data/mongo  http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd     
	http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd  
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd  
	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd  
	http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd  
	http://www.springframework.org/schema/jms  http://www.springframework.org/schema/jms/spring-jms.xsd  
	http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<mvc:annotation-driven />
	<!-- 对静态资源的访问 -->
	<mvc:default-servlet-handler />

	<aop:aspectj-autoproxy />
	
	<import resource="classpath*:redis/redis.xml" />
	
	
	
	<!-- 启动shiro的注解-->
	<bean id="controllerDefaultAdvisorAutoProxyCreator"
		 class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		 depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true"/>
	</bean>
	
	<bean id="controllerAuthorizationAttributeSourceAdvisor" 
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager"/>
	</bean>
	
	

	<!-- <context:component-scan base-package="com" /> -->
	<context:component-scan base-package="com.vein" />


	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="cache" value="false" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".html" />
	</bean>

	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />


	<websocket:handlers allowed-origins="*">
		<!-- 就是ws://localhost:8080/websocket2/websocket映射到/websocket -->
		<websocket:mapping path="/websocket" handler="WSHandler" />
		<websocket:handshake-interceptors>
			<bean class="com.vein.interceptor.HandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>

	<bean id="WSHandler" class="com.vein.handler.WSHandler" />
</beans>
